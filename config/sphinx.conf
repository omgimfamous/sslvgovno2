source itemsSource
{
    type            = mysql
    sql_host        = localhost
    sql_user        = user
    sql_pass        = pass
    sql_db          = db
    sql_port        = 3306
    sql_query_pre   = SET NAMES utf8
    sql_query_pre   = SET SESSION query_cache_type=OFF

    sql_query_range     = SELECT MIN(id), MAX(id) FROM bff_bbs_items
    sql_range_step      = 1000
    # задержка в миллисекундах между индексируемыми порциями данных
    sql_ranged_throttle = 0

    sql_attr_uint       = status
    sql_attr_uint       = moderated
    sql_attr_uint       = imgcnt
    sql_attr_uint       = shop_id
    sql_attr_float      = price_search
    sql_attr_uint       = reg2_region
    sql_attr_uint       = reg3_city
    sql_attr_uint       = metro_id
    sql_attr_timestamp  = created
}

source itemsSourceMain : itemsSource
{
    sql_query_pre = UPDATE bff_sphinx SET indexed = NOW() WHERE counter_id = 1
    sql_query     = \
            SELECT i.id, i.title, i.descr, i.moderated, \
                   i.status, i.imgcnt, i.shop_id, i.price_search, i.reg2_region, i.reg3_city, i.metro_id, \
                   UNIX_TIMESTAMP(i.created) as created \
            FROM bff_bbs_items i \
            WHERE i.modified<NOW() AND i.id>=$start AND i.id<=$end
}

source itemsSourceDelta : itemsSource
{
    sql_query     = \
            SELECT i.id, i.title, i.descr, i.moderated, \
                   i.status, i.imgcnt, i.shop_id, i.price_search, i.reg2_region, i.reg3_city, i.metro_id, \
                   UNIX_TIMESTAMP(i.created) as created \
            FROM bff_bbs_items i \
            WHERE i.modified >= (SELECT indexed FROM bff_sphinx WHERE counter_id = 1) \
              AND i.id>=$start AND i.id<=$end
}

#######################
# Индексы
#######################

index itemsIndexMain
{
    # Тип хранения аттрибутов
    docinfo                 = extern

    mlock                   = 0

    # Используемые морфологические движки
    morphology              = stem_enru

    # Кодировка данных из источника
    charset_type            = utf-8
    charset_table           = 0..9, @, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F

    # Из данных источника HTML-код нужно вырезать
    html_strip              = 1
    html_remove_elements    = style, script, code

    # *test*
    enable_star             = 1
    # Не ндексируем части слова (инфиксы)
    min_infix_len           = 0
    # Храним начало слова
    min_prefix_len          = 3
    # Минимальный размер слова для индексации
    min_word_len            = 3
    # Хранить оригинальное слово в индексе
    index_exact_words       = 1
    # running -> ( running | *running* | =running )
    expand_keywords         = 1

    source                  = itemsSourceMain
    path                    = /usr/local/sphinx/var/data/itemsIndexMain
}

index itemsIndexDelta : itemsIndexMain
{
    source                  = itemsSourceDelta
    path                    = /usr/local/sphinx/var/data/itemsIndexDelta
}

#######################
# INDEXER
#######################

indexer
{
    # Лимит памяти, который может использавать демон-индексатор
    mem_limit             = 32M
}

#######################
# SEARCHD
#######################

searchd
{
    # Адрес, на котором будет прослушиваться порт
    listen                 = 127.0.0.1:9312
    log                    = /usr/local/sphinx/var/log/searchd.log
    query_log              = /usr/local/sphinx/var/log/query.log
    pid_file               = /usr/local/sphinx/var/log/searchd.pid
    read_timeout           = 5
    max_children           = 30
    max_matches            = 100000
}
